-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity tdt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    w_div : IN STD_LOGIC_VECTOR (7 downto 0);
    h_div : IN STD_LOGIC_VECTOR (7 downto 0);
    d_w : IN STD_LOGIC_VECTOR (12 downto 0);
    d_h : IN STD_LOGIC_VECTOR (12 downto 0);
    s_w : IN STD_LOGIC_VECTOR (12 downto 0);
    s_h : IN STD_LOGIC_VECTOR (12 downto 0);
    M0 : IN STD_LOGIC_VECTOR (26 downto 0);
    M1 : IN STD_LOGIC_VECTOR (26 downto 0);
    M2 : IN STD_LOGIC_VECTOR (26 downto 0);
    M3 : IN STD_LOGIC_VECTOR (26 downto 0);
    M4 : IN STD_LOGIC_VECTOR (26 downto 0);
    M5 : IN STD_LOGIC_VECTOR (26 downto 0);
    c : IN STD_LOGIC_VECTOR (7 downto 0);
    r : IN STD_LOGIC_VECTOR (7 downto 0);
    hs_p : OUT STD_LOGIC_VECTOR (14 downto 0);
    hs_p_ap_vld : OUT STD_LOGIC;
    hs : OUT STD_LOGIC_VECTOR (14 downto 0);
    hs_ap_vld : OUT STD_LOGIC;
    ws : OUT STD_LOGIC_VECTOR (14 downto 0);
    ws_ap_vld : OUT STD_LOGIC;
    tile_valid : OUT STD_LOGIC_VECTOR (0 downto 0);
    tile_valid_ap_vld : OUT STD_LOGIC;
    left_col : OUT STD_LOGIC_VECTOR (11 downto 0);
    left_col_ap_vld : OUT STD_LOGIC;
    top_row : OUT STD_LOGIC_VECTOR (11 downto 0);
    top_row_ap_vld : OUT STD_LOGIC;
    baddr : OUT STD_LOGIC_VECTOR (31 downto 0);
    baddr_ap_vld : OUT STD_LOGIC;
    cd0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    cd0_ap_vld : OUT STD_LOGIC;
    cd1 : OUT STD_LOGIC_VECTOR (12 downto 0);
    cd1_ap_vld : OUT STD_LOGIC;
    cd2 : OUT STD_LOGIC_VECTOR (12 downto 0);
    cd2_ap_vld : OUT STD_LOGIC;
    cd3 : OUT STD_LOGIC_VECTOR (12 downto 0);
    cd3_ap_vld : OUT STD_LOGIC;
    mod_db : OUT STD_LOGIC_VECTOR (1 downto 0);
    mod_db_ap_vld : OUT STD_LOGIC );
end;


architecture behav of tdt is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "tdt,hls_ip_2018_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k325tffg676-2,HLS_INPUT_CLOCK=4.500000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.483750,HLS_SYN_LAT=11,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=25,HLS_SYN_FF=3863,HLS_SYN_LUT=3414}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_5 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000101";
    constant ap_const_lv14_4 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000100";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal M5_read_reg_1359 : STD_LOGIC_VECTOR (26 downto 0);
    signal M5_read_reg_1359_pp0_iter1_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M5_read_reg_1359_pp0_iter2_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M5_read_reg_1359_pp0_iter3_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M5_read_reg_1359_pp0_iter4_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M5_read_reg_1359_pp0_iter5_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M5_read_reg_1359_pp0_iter6_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M4_read_reg_1364 : STD_LOGIC_VECTOR (26 downto 0);
    signal M4_read_reg_1364_pp0_iter1_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M3_read_reg_1369 : STD_LOGIC_VECTOR (26 downto 0);
    signal M3_read_reg_1369_pp0_iter1_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M2_read_reg_1374 : STD_LOGIC_VECTOR (26 downto 0);
    signal M2_read_reg_1374_pp0_iter1_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M2_read_reg_1374_pp0_iter2_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M2_read_reg_1374_pp0_iter3_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M2_read_reg_1374_pp0_iter4_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M2_read_reg_1374_pp0_iter5_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M2_read_reg_1374_pp0_iter6_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M1_read_reg_1379 : STD_LOGIC_VECTOR (26 downto 0);
    signal M1_read_reg_1379_pp0_iter1_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal M0_read_reg_1384 : STD_LOGIC_VECTOR (26 downto 0);
    signal M0_read_reg_1384_pp0_iter1_reg : STD_LOGIC_VECTOR (26 downto 0);
    signal s_h_read_reg_1389 : STD_LOGIC_VECTOR (12 downto 0);
    signal s_h_read_reg_1389_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_h_read_reg_1389_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_h_read_reg_1389_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_h_read_reg_1389_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_h_read_reg_1389_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_h_read_reg_1389_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_h_read_reg_1389_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_h_read_reg_1389_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_w_read_reg_1396 : STD_LOGIC_VECTOR (12 downto 0);
    signal s_w_read_reg_1396_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_w_read_reg_1396_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_w_read_reg_1396_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_w_read_reg_1396_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_w_read_reg_1396_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_w_read_reg_1396_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_w_read_reg_1396_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal s_w_read_reg_1396_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal h_div_read_reg_1404 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_div_read_reg_1404_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_div_read_reg_1404_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_div_read_reg_1404_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_div_read_reg_1404_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_div_read_reg_1404_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_div_read_reg_1404_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_div_read_reg_1404_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal h_div_read_reg_1404_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w_div_read_reg_1410 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_div_read_reg_1410_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w_div_read_reg_1410_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w_div_read_reg_1410_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w_div_read_reg_1410_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w_div_read_reg_1410_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w_div_read_reg_1410_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w_div_read_reg_1410_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal w_div_read_reg_1410_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal cd00_fu_308_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416 : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd00_reg_1416_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal rd00_fu_322_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal rd00_reg_1424 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_7_reg_1430 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_reg_1435 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_reg_1440 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_reg_1440_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_reg_1440_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_reg_1440_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_reg_1440_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_reg_1440_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_reg_1440_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_reg_1445 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_reg_1445_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_reg_1445_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_reg_1445_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_reg_1445_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_reg_1445_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_reg_1445_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_fu_368_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_reg_1450 : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_reg_1450_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_reg_1450_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_reg_1450_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_reg_1450_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_reg_1450_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_reg_1450_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_reg_1450_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_reg_1450_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_fu_372_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_reg_1456 : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_reg_1456_pp0_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_reg_1456_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_reg_1456_pp0_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_reg_1456_pp0_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_reg_1456_pp0_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_reg_1456_pp0_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_reg_1456_pp0_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_reg_1456_pp0_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal cd11_fu_389_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462 : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462_pp0_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal cd11_reg_1462_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_15_fu_418_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_15_reg_1468 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_16_fu_423_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_16_reg_1473 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_26_1_fu_428_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_26_1_reg_1478 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_27_2_fu_434_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_27_2_reg_1483 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_440_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_443_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_449_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_452_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_461_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_1_fu_482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_2_fu_497_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_1536 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_464_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_1541 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_470_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_1547 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_476_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_reg_1552 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_485_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_1_reg_1558 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_491_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_1_reg_1563 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_500_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_2_reg_1568 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_506_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_2_reg_1574 : STD_LOGIC_VECTOR (31 downto 0);
    signal cs_0_fu_572_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal cs_0_reg_1580 : STD_LOGIC_VECTOR (17 downto 0);
    signal rs_0_fu_578_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal rs_0_reg_1587 : STD_LOGIC_VECTOR (17 downto 0);
    signal cs_1_fu_632_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal cs_1_reg_1594 : STD_LOGIC_VECTOR (17 downto 0);
    signal rs_1_fu_638_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal rs_1_reg_1601 : STD_LOGIC_VECTOR (17 downto 0);
    signal cs_2_fu_682_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal cs_2_reg_1608 : STD_LOGIC_VECTOR (17 downto 0);
    signal rs_2_fu_688_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal rs_2_reg_1615 : STD_LOGIC_VECTOR (17 downto 0);
    signal cs_3_fu_732_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal cs_3_reg_1622 : STD_LOGIC_VECTOR (17 downto 0);
    signal rs_3_fu_738_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal rs_3_reg_1629 : STD_LOGIC_VECTOR (17 downto 0);
    signal min1_fu_748_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal min1_reg_1636 : STD_LOGIC_VECTOR (17 downto 0);
    signal min2_fu_758_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal min2_reg_1641 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_97_i_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_i_reg_1646 : STD_LOGIC_VECTOR (0 downto 0);
    signal max1_fu_770_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal max1_reg_1651 : STD_LOGIC_VECTOR (17 downto 0);
    signal max2_fu_776_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal max2_reg_1657 : STD_LOGIC_VECTOR (17 downto 0);
    signal min1_1_fu_786_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal min1_1_reg_1663 : STD_LOGIC_VECTOR (17 downto 0);
    signal min2_2_fu_796_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal min2_2_reg_1668 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_97_i1_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_97_i1_reg_1673 : STD_LOGIC_VECTOR (0 downto 0);
    signal max1_2_fu_808_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal max1_2_reg_1678 : STD_LOGIC_VECTOR (17 downto 0);
    signal max2_1_fu_814_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal max2_1_reg_1684 : STD_LOGIC_VECTOR (17 downto 0);
    signal cl_1_fu_891_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_1_reg_1695 : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_1_reg_1695_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_1_fu_992_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_1_reg_1701 : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_1_reg_1701_pp0_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_40_fu_1055_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_40_reg_1711 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_40_reg_1711_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_43_fu_1069_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_43_reg_1718 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_43_reg_1718_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal sel_tmp7_fu_1181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1725 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_reg_1725_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal m_fu_1256_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_300_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal cd00_fu_308_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal cd00_fu_308_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_314_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal rd00_fu_322_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal rd00_fu_322_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_348_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_14_fu_358_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal cl_fu_368_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal rt_fu_372_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_cast_fu_376_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp1_fu_379_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp21_cast_fu_385_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_cast_fu_394_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp2_fu_397_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp22_cast_fu_403_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_4_fu_412_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_s_fu_415_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal rd11_fu_407_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_455_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_455_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_464_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_464_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_470_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_470_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_476_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_476_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_485_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_485_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_491_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_491_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_500_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_500_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_506_p0 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_506_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_9_fu_512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_524_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_515_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_529_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_544_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_26_fu_539_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_558_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_40_cast_fu_554_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_17_cast_fu_518_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_43_cast_fu_568_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_20_cast_fu_521_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_32_1_fu_584_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_1_fu_594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_1_fu_589_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_604_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_38_1_fu_599_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_618_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_46_cast_fu_614_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_53_cast_fu_628_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_33_2_fu_644_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_654_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_38_2_fu_649_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_668_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_58_cast_fu_664_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_65_cast_fu_678_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_33_3_fu_694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_704_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_38_3_fu_699_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_718_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_76_cast_fu_714_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_86_cast_fu_728_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_i_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_6_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i1_7_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal min2_1_fu_841_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal min2_1_cast_fu_846_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_24_cast_fu_858_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_16_cast_fu_829_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_35_fu_850_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_fu_872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cl_2_fu_868_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal cl_3_fu_884_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_98_i_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max1_1_fu_903_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_16_cast3_fu_826_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_42_fu_915_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal cr_2_fu_923_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_37_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_cr_2_fu_927_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal min2_3_fu_942_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal min2_3_cast_fu_947_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_57_cast_fu_959_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_19_cast_fu_838_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_61_fu_951_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rt_2_fu_969_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal rt_3_fu_985_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_98_i1_fu_1000_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal max1_3_fu_1004_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_19_cast2_fu_835_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_64_fu_1016_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rb_2_fu_1024_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_39_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rb_2_fu_1028_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal rb_1_fu_1036_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_66_cast_fu_1047_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_68_cast_fu_1051_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal cr_1_fu_935_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_70_cast_fu_1061_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_71_cast_fu_1065_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_46_fu_1075_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_78_cast1_fu_1082_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_16_cast2_fu_823_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_47_fu_1090_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_79_cast_fu_1096_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_78_cast_fu_1086_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_49_fu_1106_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_81_cast_fu_1112_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_51_fu_1122_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_88_cast_fu_1133_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_52_fu_1137_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_89_cast_fu_1143_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_88_cast1_fu_1129_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_19_cast1_fu_832_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_54_fu_1153_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_93_cast_fu_1159_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_48_fu_1100_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_1116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_fu_1163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_1175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal abscond_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_1192_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal s_tile_h_fu_1197_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal abscond1_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_1221_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal s_tile_w_r2_9_fu_1226_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_45_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_1209_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal s_tile_h_1_fu_1243_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal s_tile_w_r2_5_cast_fu_1233_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp2_fu_1285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_tile_w_r2_3_fu_1279_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp4_fu_1299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_tile_w_r2_2_fu_1273_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal s_tile_w_r2_5_fu_1291_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp8_fu_1313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_tile_w_r2_1_fu_1267_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal s_tile_w_r2_6_fu_1305_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sel_tmp3_fu_1327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_tile_w_r2_fu_1261_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal s_tile_w_r2_7_fu_1319_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal s_tile_w_r2_8_fu_1333_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_1350_p3 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_455_ce : STD_LOGIC;
    signal grp_fu_464_ce : STD_LOGIC;
    signal grp_fu_470_ce : STD_LOGIC;
    signal grp_fu_476_ce : STD_LOGIC;
    signal grp_fu_485_ce : STD_LOGIC;
    signal grp_fu_491_ce : STD_LOGIC;
    signal grp_fu_500_ce : STD_LOGIC;
    signal grp_fu_506_ce : STD_LOGIC;
    signal grp_fu_1350_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to10 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component tdt_mul_27s_13s_3bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (26 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component tdt_mac_muladd_13cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        din2 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;



begin
    tdt_mul_27s_13s_3bkb_U1 : component tdt_mul_27s_13s_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 27,
        din1_WIDTH => 13,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_455_p0,
        din1 => grp_fu_455_p1,
        ce => grp_fu_455_ce,
        dout => grp_fu_455_p2);

    tdt_mul_27s_13s_3bkb_U2 : component tdt_mul_27s_13s_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 27,
        din1_WIDTH => 13,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_464_p0,
        din1 => grp_fu_464_p1,
        ce => grp_fu_464_ce,
        dout => grp_fu_464_p2);

    tdt_mul_27s_13s_3bkb_U3 : component tdt_mul_27s_13s_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 27,
        din1_WIDTH => 13,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_470_p0,
        din1 => grp_fu_470_p1,
        ce => grp_fu_470_ce,
        dout => grp_fu_470_p2);

    tdt_mul_27s_13s_3bkb_U4 : component tdt_mul_27s_13s_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 27,
        din1_WIDTH => 13,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_476_p0,
        din1 => grp_fu_476_p1,
        ce => grp_fu_476_ce,
        dout => grp_fu_476_p2);

    tdt_mul_27s_13s_3bkb_U5 : component tdt_mul_27s_13s_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 27,
        din1_WIDTH => 13,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_485_p0,
        din1 => grp_fu_485_p1,
        ce => grp_fu_485_ce,
        dout => grp_fu_485_p2);

    tdt_mul_27s_13s_3bkb_U6 : component tdt_mul_27s_13s_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 27,
        din1_WIDTH => 13,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_491_p0,
        din1 => grp_fu_491_p1,
        ce => grp_fu_491_ce,
        dout => grp_fu_491_p2);

    tdt_mul_27s_13s_3bkb_U7 : component tdt_mul_27s_13s_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 27,
        din1_WIDTH => 13,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_500_p0,
        din1 => grp_fu_500_p1,
        ce => grp_fu_500_ce,
        dout => grp_fu_500_p2);

    tdt_mul_27s_13s_3bkb_U8 : component tdt_mul_27s_13s_3bkb
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 27,
        din1_WIDTH => 13,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_506_p0,
        din1 => grp_fu_506_p1,
        ce => grp_fu_506_ce,
        dout => grp_fu_506_p2);

    tdt_mac_muladd_13cud_U9 : component tdt_mac_muladd_13cud
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 13,
        din1_WIDTH => 12,
        din2_WIDTH => 12,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => s_w_read_reg_1396_pp0_iter8_reg,
        din1 => rt_1_fu_992_p3,
        din2 => cl_1_reg_1695_pp0_iter10_reg,
        ce => grp_fu_1350_ce,
        dout => grp_fu_1350_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                if ((ap_const_logic_1 = ap_ce)) then 
                    ap_CS_fsm <= ap_NS_fsm;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                M0_read_reg_1384 <= M0;
                M0_read_reg_1384_pp0_iter1_reg <= M0_read_reg_1384;
                M1_read_reg_1379 <= M1;
                M1_read_reg_1379_pp0_iter1_reg <= M1_read_reg_1379;
                M2_read_reg_1374 <= M2;
                M2_read_reg_1374_pp0_iter1_reg <= M2_read_reg_1374;
                M3_read_reg_1369 <= M3;
                M3_read_reg_1369_pp0_iter1_reg <= M3_read_reg_1369;
                M4_read_reg_1364 <= M4;
                M4_read_reg_1364_pp0_iter1_reg <= M4_read_reg_1364;
                M5_read_reg_1359 <= M5;
                M5_read_reg_1359_pp0_iter1_reg <= M5_read_reg_1359;
                cd00_reg_1416 <= cd00_fu_308_p2;
                cd00_reg_1416_pp0_iter1_reg <= cd00_reg_1416;
                cd11_reg_1462 <= cd11_fu_389_p2;
                cl_reg_1450 <= cl_fu_368_p1;
                cl_reg_1450_pp0_iter1_reg <= cl_reg_1450;
                h_div_read_reg_1404 <= h_div;
                h_div_read_reg_1404_pp0_iter1_reg <= h_div_read_reg_1404;
                rd00_reg_1424 <= rd00_fu_322_p2;
                rt_reg_1456 <= rt_fu_372_p1;
                rt_reg_1456_pp0_iter1_reg <= rt_reg_1456;
                s_h_read_reg_1389 <= s_h;
                s_h_read_reg_1389_pp0_iter1_reg <= s_h_read_reg_1389;
                s_w_read_reg_1396 <= s_w;
                s_w_read_reg_1396_pp0_iter1_reg <= s_w_read_reg_1396;
                tmp_13_reg_1440 <= tmp_13_fu_348_p1(12 downto 1);
                tmp_13_reg_1440_pp0_iter1_reg <= tmp_13_reg_1440;
                tmp_14_reg_1445 <= tmp_14_fu_358_p1(12 downto 1);
                tmp_14_reg_1445_pp0_iter1_reg <= tmp_14_reg_1445;
                tmp_15_reg_1468 <= tmp_15_fu_418_p2;
                tmp_16_reg_1473 <= tmp_16_fu_423_p2;
                tmp_26_1_reg_1478 <= tmp_26_1_fu_428_p2;
                tmp_27_2_reg_1483 <= tmp_27_2_fu_434_p2;
                tmp_3_reg_1435 <= d_h(12 downto 1);
                tmp_7_reg_1430 <= d_w(12 downto 1);
                w_div_read_reg_1410 <= w_div;
                w_div_read_reg_1410_pp0_iter1_reg <= w_div_read_reg_1410;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                M2_read_reg_1374_pp0_iter2_reg <= M2_read_reg_1374_pp0_iter1_reg;
                M2_read_reg_1374_pp0_iter3_reg <= M2_read_reg_1374_pp0_iter2_reg;
                M2_read_reg_1374_pp0_iter4_reg <= M2_read_reg_1374_pp0_iter3_reg;
                M2_read_reg_1374_pp0_iter5_reg <= M2_read_reg_1374_pp0_iter4_reg;
                M2_read_reg_1374_pp0_iter6_reg <= M2_read_reg_1374_pp0_iter5_reg;
                M5_read_reg_1359_pp0_iter2_reg <= M5_read_reg_1359_pp0_iter1_reg;
                M5_read_reg_1359_pp0_iter3_reg <= M5_read_reg_1359_pp0_iter2_reg;
                M5_read_reg_1359_pp0_iter4_reg <= M5_read_reg_1359_pp0_iter3_reg;
                M5_read_reg_1359_pp0_iter5_reg <= M5_read_reg_1359_pp0_iter4_reg;
                M5_read_reg_1359_pp0_iter6_reg <= M5_read_reg_1359_pp0_iter5_reg;
                cd00_reg_1416_pp0_iter10_reg <= cd00_reg_1416_pp0_iter9_reg;
                cd00_reg_1416_pp0_iter2_reg <= cd00_reg_1416_pp0_iter1_reg;
                cd00_reg_1416_pp0_iter3_reg <= cd00_reg_1416_pp0_iter2_reg;
                cd00_reg_1416_pp0_iter4_reg <= cd00_reg_1416_pp0_iter3_reg;
                cd00_reg_1416_pp0_iter5_reg <= cd00_reg_1416_pp0_iter4_reg;
                cd00_reg_1416_pp0_iter6_reg <= cd00_reg_1416_pp0_iter5_reg;
                cd00_reg_1416_pp0_iter7_reg <= cd00_reg_1416_pp0_iter6_reg;
                cd00_reg_1416_pp0_iter8_reg <= cd00_reg_1416_pp0_iter7_reg;
                cd00_reg_1416_pp0_iter9_reg <= cd00_reg_1416_pp0_iter8_reg;
                cd11_reg_1462_pp0_iter10_reg <= cd11_reg_1462_pp0_iter9_reg;
                cd11_reg_1462_pp0_iter2_reg <= cd11_reg_1462;
                cd11_reg_1462_pp0_iter3_reg <= cd11_reg_1462_pp0_iter2_reg;
                cd11_reg_1462_pp0_iter4_reg <= cd11_reg_1462_pp0_iter3_reg;
                cd11_reg_1462_pp0_iter5_reg <= cd11_reg_1462_pp0_iter4_reg;
                cd11_reg_1462_pp0_iter6_reg <= cd11_reg_1462_pp0_iter5_reg;
                cd11_reg_1462_pp0_iter7_reg <= cd11_reg_1462_pp0_iter6_reg;
                cd11_reg_1462_pp0_iter8_reg <= cd11_reg_1462_pp0_iter7_reg;
                cd11_reg_1462_pp0_iter9_reg <= cd11_reg_1462_pp0_iter8_reg;
                cl_1_reg_1695 <= cl_1_fu_891_p3;
                cl_1_reg_1695_pp0_iter10_reg <= cl_1_reg_1695;
                cl_reg_1450_pp0_iter2_reg <= cl_reg_1450_pp0_iter1_reg;
                cl_reg_1450_pp0_iter3_reg <= cl_reg_1450_pp0_iter2_reg;
                cl_reg_1450_pp0_iter4_reg <= cl_reg_1450_pp0_iter3_reg;
                cl_reg_1450_pp0_iter5_reg <= cl_reg_1450_pp0_iter4_reg;
                cl_reg_1450_pp0_iter6_reg <= cl_reg_1450_pp0_iter5_reg;
                cl_reg_1450_pp0_iter7_reg <= cl_reg_1450_pp0_iter6_reg;
                cl_reg_1450_pp0_iter8_reg <= cl_reg_1450_pp0_iter7_reg;
                cs_0_reg_1580 <= cs_0_fu_572_p2;
                cs_1_reg_1594 <= cs_1_fu_632_p2;
                cs_2_reg_1608 <= cs_2_fu_682_p2;
                cs_3_reg_1622 <= cs_3_fu_732_p2;
                h_div_read_reg_1404_pp0_iter2_reg <= h_div_read_reg_1404_pp0_iter1_reg;
                h_div_read_reg_1404_pp0_iter3_reg <= h_div_read_reg_1404_pp0_iter2_reg;
                h_div_read_reg_1404_pp0_iter4_reg <= h_div_read_reg_1404_pp0_iter3_reg;
                h_div_read_reg_1404_pp0_iter5_reg <= h_div_read_reg_1404_pp0_iter4_reg;
                h_div_read_reg_1404_pp0_iter6_reg <= h_div_read_reg_1404_pp0_iter5_reg;
                h_div_read_reg_1404_pp0_iter7_reg <= h_div_read_reg_1404_pp0_iter6_reg;
                h_div_read_reg_1404_pp0_iter8_reg <= h_div_read_reg_1404_pp0_iter7_reg;
                max1_2_reg_1678 <= max1_2_fu_808_p3;
                max1_reg_1651 <= max1_fu_770_p3;
                max2_1_reg_1684 <= max2_1_fu_814_p3;
                max2_reg_1657 <= max2_fu_776_p3;
                min1_1_reg_1663 <= min1_1_fu_786_p3;
                min1_reg_1636 <= min1_fu_748_p3;
                min2_2_reg_1668 <= min2_2_fu_796_p3;
                min2_reg_1641 <= min2_fu_758_p3;
                rs_0_reg_1587 <= rs_0_fu_578_p2;
                rs_1_reg_1601 <= rs_1_fu_638_p2;
                rs_2_reg_1615 <= rs_2_fu_688_p2;
                rs_3_reg_1629 <= rs_3_fu_738_p2;
                rt_1_reg_1701 <= rt_1_fu_992_p3;
                rt_1_reg_1701_pp0_iter10_reg <= rt_1_reg_1701;
                rt_reg_1456_pp0_iter2_reg <= rt_reg_1456_pp0_iter1_reg;
                rt_reg_1456_pp0_iter3_reg <= rt_reg_1456_pp0_iter2_reg;
                rt_reg_1456_pp0_iter4_reg <= rt_reg_1456_pp0_iter3_reg;
                rt_reg_1456_pp0_iter5_reg <= rt_reg_1456_pp0_iter4_reg;
                rt_reg_1456_pp0_iter6_reg <= rt_reg_1456_pp0_iter5_reg;
                rt_reg_1456_pp0_iter7_reg <= rt_reg_1456_pp0_iter6_reg;
                rt_reg_1456_pp0_iter8_reg <= rt_reg_1456_pp0_iter7_reg;
                s_h_read_reg_1389_pp0_iter2_reg <= s_h_read_reg_1389_pp0_iter1_reg;
                s_h_read_reg_1389_pp0_iter3_reg <= s_h_read_reg_1389_pp0_iter2_reg;
                s_h_read_reg_1389_pp0_iter4_reg <= s_h_read_reg_1389_pp0_iter3_reg;
                s_h_read_reg_1389_pp0_iter5_reg <= s_h_read_reg_1389_pp0_iter4_reg;
                s_h_read_reg_1389_pp0_iter6_reg <= s_h_read_reg_1389_pp0_iter5_reg;
                s_h_read_reg_1389_pp0_iter7_reg <= s_h_read_reg_1389_pp0_iter6_reg;
                s_h_read_reg_1389_pp0_iter8_reg <= s_h_read_reg_1389_pp0_iter7_reg;
                s_w_read_reg_1396_pp0_iter2_reg <= s_w_read_reg_1396_pp0_iter1_reg;
                s_w_read_reg_1396_pp0_iter3_reg <= s_w_read_reg_1396_pp0_iter2_reg;
                s_w_read_reg_1396_pp0_iter4_reg <= s_w_read_reg_1396_pp0_iter3_reg;
                s_w_read_reg_1396_pp0_iter5_reg <= s_w_read_reg_1396_pp0_iter4_reg;
                s_w_read_reg_1396_pp0_iter6_reg <= s_w_read_reg_1396_pp0_iter5_reg;
                s_w_read_reg_1396_pp0_iter7_reg <= s_w_read_reg_1396_pp0_iter6_reg;
                s_w_read_reg_1396_pp0_iter8_reg <= s_w_read_reg_1396_pp0_iter7_reg;
                sel_tmp7_reg_1725 <= sel_tmp7_fu_1181_p2;
                sel_tmp7_reg_1725_pp0_iter10_reg <= sel_tmp7_reg_1725;
                tmp_13_reg_1440_pp0_iter2_reg <= tmp_13_reg_1440_pp0_iter1_reg;
                tmp_13_reg_1440_pp0_iter3_reg <= tmp_13_reg_1440_pp0_iter2_reg;
                tmp_13_reg_1440_pp0_iter4_reg <= tmp_13_reg_1440_pp0_iter3_reg;
                tmp_13_reg_1440_pp0_iter5_reg <= tmp_13_reg_1440_pp0_iter4_reg;
                tmp_13_reg_1440_pp0_iter6_reg <= tmp_13_reg_1440_pp0_iter5_reg;
                tmp_14_reg_1445_pp0_iter2_reg <= tmp_14_reg_1445_pp0_iter1_reg;
                tmp_14_reg_1445_pp0_iter3_reg <= tmp_14_reg_1445_pp0_iter2_reg;
                tmp_14_reg_1445_pp0_iter4_reg <= tmp_14_reg_1445_pp0_iter3_reg;
                tmp_14_reg_1445_pp0_iter5_reg <= tmp_14_reg_1445_pp0_iter4_reg;
                tmp_14_reg_1445_pp0_iter6_reg <= tmp_14_reg_1445_pp0_iter5_reg;
                tmp_18_reg_1536 <= grp_fu_455_p2;
                tmp_20_reg_1541 <= grp_fu_464_p2;
                tmp_23_reg_1547 <= grp_fu_470_p2;
                tmp_24_reg_1552 <= grp_fu_476_p2;
                tmp_29_1_reg_1558 <= grp_fu_485_p2;
                tmp_31_2_reg_1568 <= grp_fu_500_p2;
                tmp_35_1_reg_1563 <= grp_fu_491_p2;
                tmp_36_2_reg_1574 <= grp_fu_506_p2;
                tmp_40_reg_1711 <= tmp_40_fu_1055_p2;
                tmp_40_reg_1711_pp0_iter10_reg <= tmp_40_reg_1711;
                tmp_43_reg_1718 <= tmp_43_fu_1069_p2;
                tmp_43_reg_1718_pp0_iter10_reg <= tmp_43_reg_1718;
                tmp_97_i1_reg_1673 <= tmp_97_i1_fu_802_p2;
                tmp_97_i_reg_1646 <= tmp_97_i_fu_764_p2;
                w_div_read_reg_1410_pp0_iter2_reg <= w_div_read_reg_1410_pp0_iter1_reg;
                w_div_read_reg_1410_pp0_iter3_reg <= w_div_read_reg_1410_pp0_iter2_reg;
                w_div_read_reg_1410_pp0_iter4_reg <= w_div_read_reg_1410_pp0_iter3_reg;
                w_div_read_reg_1410_pp0_iter5_reg <= w_div_read_reg_1410_pp0_iter4_reg;
                w_div_read_reg_1410_pp0_iter6_reg <= w_div_read_reg_1410_pp0_iter5_reg;
                w_div_read_reg_1410_pp0_iter7_reg <= w_div_read_reg_1410_pp0_iter6_reg;
                w_div_read_reg_1410_pp0_iter8_reg <= w_div_read_reg_1410_pp0_iter7_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    abscond1_fu_1216_p2 <= "1" when (signed(tmp_43_reg_1718_pp0_iter10_reg) > signed(ap_const_lv13_0)) else "0";
    abscond_fu_1187_p2 <= "1" when (signed(tmp_40_reg_1711_pp0_iter10_reg) > signed(ap_const_lv13_0)) else "0";
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter11, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11)
    begin
        if (((ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to10_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to10 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to10)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to10 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

        baddr <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1350_p3),32));


    baddr_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            baddr_ap_vld <= ap_const_logic_1;
        else 
            baddr_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    cd0 <= cd00_reg_1416_pp0_iter10_reg;
    cd00_fu_308_p0 <= tmp_fu_300_p0;
    cd00_fu_308_p1 <= c;
    cd00_fu_308_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(cd00_fu_308_p0) * signed(cd00_fu_308_p1))), 13));

    cd0_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cd0_ap_vld <= ap_const_logic_1;
        else 
            cd0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    cd1 <= cd11_reg_1462_pp0_iter10_reg;
    cd11_fu_389_p2 <= std_logic_vector(signed(tmp21_cast_fu_385_p1) + signed(cd00_reg_1416));

    cd1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cd1_ap_vld <= ap_const_logic_1;
        else 
            cd1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    cd2 <= cd00_reg_1416_pp0_iter10_reg;

    cd2_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cd2_ap_vld <= ap_const_logic_1;
        else 
            cd2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    cd3 <= cd11_reg_1462_pp0_iter10_reg;

    cd3_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            cd3_ap_vld <= ap_const_logic_1;
        else 
            cd3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    cl_1_fu_891_p3 <= 
        ap_const_lv12_0 when (tmp_35_fu_850_p3(0) = '1') else 
        cl_3_fu_884_p3;
    cl_2_fu_868_p1 <= min2_1_fu_841_p3(12 - 1 downto 0);
    cl_3_fu_884_p3 <= 
        cl_reg_1450_pp0_iter8_reg when (sel_tmp1_fu_878_p2(0) = '1') else 
        cl_2_fu_868_p1;
    cl_fu_368_p0 <= s_w;
    cl_fu_368_p1 <= cl_fu_368_p0(12 - 1 downto 0);
    cr_1_fu_935_p3 <= 
        cl_reg_1450_pp0_iter8_reg when (tmp_37_fu_909_p2(0) = '1') else 
        p_cr_2_fu_927_p3;
    cr_2_fu_923_p1 <= max1_1_fu_903_p3(12 - 1 downto 0);
    cs_0_fu_572_p2 <= std_logic_vector(signed(tmp_40_cast_fu_554_p1) + signed(tmp_17_cast_fu_518_p1));
    cs_1_fu_632_p2 <= std_logic_vector(signed(tmp_46_cast_fu_614_p1) + signed(tmp_17_cast_fu_518_p1));
    cs_2_fu_682_p2 <= std_logic_vector(signed(tmp_58_cast_fu_664_p1) + signed(tmp_17_cast_fu_518_p1));
    cs_3_fu_732_p2 <= std_logic_vector(signed(tmp_76_cast_fu_714_p1) + signed(tmp_17_cast_fu_518_p1));

    grp_fu_1350_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1350_ce <= ap_const_logic_1;
        else 
            grp_fu_1350_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_455_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_455_ce <= ap_const_logic_1;
        else 
            grp_fu_455_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_455_p0 <= tmp_8_fu_440_p1(27 - 1 downto 0);
    grp_fu_455_p1 <= tmp_17_fu_452_p1(13 - 1 downto 0);

    grp_fu_464_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_464_ce <= ap_const_logic_1;
        else 
            grp_fu_464_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_464_p0 <= tmp_2_fu_443_p1(27 - 1 downto 0);
    grp_fu_464_p1 <= tmp_19_fu_461_p1(13 - 1 downto 0);

    grp_fu_470_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_470_ce <= ap_const_logic_1;
        else 
            grp_fu_470_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_470_p0 <= tmp_10_fu_446_p1(27 - 1 downto 0);
    grp_fu_470_p1 <= tmp_17_fu_452_p1(13 - 1 downto 0);

    grp_fu_476_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_476_ce <= ap_const_logic_1;
        else 
            grp_fu_476_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_476_p0 <= tmp_11_fu_449_p1(27 - 1 downto 0);
    grp_fu_476_p1 <= tmp_19_fu_461_p1(13 - 1 downto 0);

    grp_fu_485_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_485_ce <= ap_const_logic_1;
        else 
            grp_fu_485_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_485_p0 <= tmp_8_fu_440_p1(27 - 1 downto 0);
    grp_fu_485_p1 <= tmp_28_1_fu_482_p1(13 - 1 downto 0);

    grp_fu_491_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_491_ce <= ap_const_logic_1;
        else 
            grp_fu_491_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_491_p0 <= tmp_10_fu_446_p1(27 - 1 downto 0);
    grp_fu_491_p1 <= tmp_28_1_fu_482_p1(13 - 1 downto 0);

    grp_fu_500_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_500_ce <= ap_const_logic_1;
        else 
            grp_fu_500_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_500_p0 <= tmp_2_fu_443_p1(27 - 1 downto 0);
    grp_fu_500_p1 <= tmp_30_2_fu_497_p1(13 - 1 downto 0);

    grp_fu_506_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_506_ce <= ap_const_logic_1;
        else 
            grp_fu_506_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_506_p0 <= tmp_11_fu_449_p1(27 - 1 downto 0);
    grp_fu_506_p1 <= tmp_30_2_fu_497_p1(13 - 1 downto 0);
    hs <= std_logic_vector(IEEE.numeric_std.resize(unsigned(s_tile_h_1_fu_1243_p3),15));

    hs_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            hs_ap_vld <= ap_const_logic_1;
        else 
            hs_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        hs_p <= std_logic_vector(IEEE.numeric_std.resize(signed(s_tile_h_fu_1197_p3),15));


    hs_p_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            hs_p_ap_vld <= ap_const_logic_1;
        else 
            hs_p_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    left_col <= cl_1_reg_1695_pp0_iter10_reg;

    left_col_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            left_col_ap_vld <= ap_const_logic_1;
        else 
            left_col_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    m_fu_1256_p1 <= s_tile_w_r2_9_fu_1226_p3(2 - 1 downto 0);
    max1_1_fu_903_p3 <= 
        max1_reg_1651 when (tmp_98_i_fu_899_p2(0) = '1') else 
        max2_reg_1657;
    max1_2_fu_808_p3 <= 
        rs_0_reg_1587 when (tmp_i1_fu_782_p2(0) = '1') else 
        rs_1_reg_1601;
    max1_3_fu_1004_p3 <= 
        max1_2_reg_1678 when (tmp_98_i1_fu_1000_p2(0) = '1') else 
        max2_1_reg_1684;
    max1_fu_770_p3 <= 
        cs_0_reg_1580 when (tmp_i_fu_744_p2(0) = '1') else 
        cs_1_reg_1594;
    max2_1_fu_814_p3 <= 
        rs_2_reg_1615 when (tmp_i1_7_fu_792_p2(0) = '1') else 
        rs_3_reg_1629;
    max2_fu_776_p3 <= 
        cs_2_reg_1608 when (tmp_i_6_fu_754_p2(0) = '1') else 
        cs_3_reg_1622;
    min1_1_fu_786_p3 <= 
        rs_1_reg_1601 when (tmp_i1_fu_782_p2(0) = '1') else 
        rs_0_reg_1587;
    min1_fu_748_p3 <= 
        cs_1_reg_1594 when (tmp_i_fu_744_p2(0) = '1') else 
        cs_0_reg_1580;
        min2_1_cast_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(min2_1_fu_841_p3),26));

    min2_1_fu_841_p3 <= 
        min2_reg_1641 when (tmp_97_i_reg_1646(0) = '1') else 
        min1_reg_1636;
    min2_2_fu_796_p3 <= 
        rs_3_reg_1629 when (tmp_i1_7_fu_792_p2(0) = '1') else 
        rs_2_reg_1615;
        min2_3_cast_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(min2_3_fu_942_p3),26));

    min2_3_fu_942_p3 <= 
        min2_2_reg_1668 when (tmp_97_i1_reg_1673(0) = '1') else 
        min1_1_reg_1663;
    min2_fu_758_p3 <= 
        cs_3_reg_1622 when (tmp_i_6_fu_754_p2(0) = '1') else 
        cs_2_reg_1608;
    mod_db <= m_fu_1256_p1;

    mod_db_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            mod_db_ap_vld <= ap_const_logic_1;
        else 
            mod_db_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_cr_2_fu_927_p3 <= 
        ap_const_lv12_0 when (tmp_42_fu_915_p3(0) = '1') else 
        cr_2_fu_923_p1;
    p_rb_2_fu_1028_p3 <= 
        ap_const_lv12_0 when (tmp_64_fu_1016_p3(0) = '1') else 
        rb_2_fu_1024_p1;
    rb_1_fu_1036_p3 <= 
        rt_reg_1456_pp0_iter8_reg when (tmp_39_fu_1010_p2(0) = '1') else 
        p_rb_2_fu_1028_p3;
    rb_2_fu_1024_p1 <= max1_3_fu_1004_p3(12 - 1 downto 0);
    rd00_fu_322_p0 <= tmp_5_fu_314_p0;
    rd00_fu_322_p1 <= r;
    rd00_fu_322_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(rd00_fu_322_p0) * signed(rd00_fu_322_p1))), 13));
    rd11_fu_407_p2 <= std_logic_vector(signed(tmp22_cast_fu_403_p1) + signed(rd00_reg_1424));
    rs_0_fu_578_p2 <= std_logic_vector(signed(tmp_43_cast_fu_568_p1) + signed(tmp_20_cast_fu_521_p1));
    rs_1_fu_638_p2 <= std_logic_vector(signed(tmp_53_cast_fu_628_p1) + signed(tmp_20_cast_fu_521_p1));
    rs_2_fu_688_p2 <= std_logic_vector(signed(tmp_65_cast_fu_678_p1) + signed(tmp_20_cast_fu_521_p1));
    rs_3_fu_738_p2 <= std_logic_vector(signed(tmp_86_cast_fu_728_p1) + signed(tmp_20_cast_fu_521_p1));
    rt_1_fu_992_p3 <= 
        ap_const_lv12_0 when (tmp_61_fu_951_p3(0) = '1') else 
        rt_3_fu_985_p3;
    rt_2_fu_969_p1 <= min2_3_fu_942_p3(12 - 1 downto 0);
    rt_3_fu_985_p3 <= 
        rt_reg_1456_pp0_iter8_reg when (sel_tmp6_fu_979_p2(0) = '1') else 
        rt_2_fu_969_p1;
    rt_fu_372_p0 <= s_h;
    rt_fu_372_p1 <= rt_fu_372_p0(12 - 1 downto 0);
    s_tile_h_1_fu_1243_p3 <= 
        ap_const_lv12_1 when (tmp_45_fu_1237_p2(0) = '1') else 
        tmp_66_fu_1209_p1;
    s_tile_h_fu_1197_p3 <= 
        tmp_40_reg_1711_pp0_iter10_reg when (abscond_fu_1187_p2(0) = '1') else 
        tmp_41_fu_1192_p2;
    s_tile_w_r2_1_fu_1267_p2 <= std_logic_vector(unsigned(ap_const_lv14_5) + unsigned(s_tile_w_r2_5_cast_fu_1233_p1));
    s_tile_w_r2_2_fu_1273_p2 <= std_logic_vector(unsigned(ap_const_lv14_4) + unsigned(s_tile_w_r2_5_cast_fu_1233_p1));
    s_tile_w_r2_3_fu_1279_p2 <= std_logic_vector(unsigned(ap_const_lv14_3) + unsigned(s_tile_w_r2_5_cast_fu_1233_p1));
        s_tile_w_r2_5_cast_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_tile_w_r2_9_fu_1226_p3),14));

    s_tile_w_r2_5_fu_1291_p3 <= 
        s_tile_w_r2_3_fu_1279_p2 when (sel_tmp2_fu_1285_p2(0) = '1') else 
        s_tile_w_r2_5_cast_fu_1233_p1;
    s_tile_w_r2_6_fu_1305_p3 <= 
        s_tile_w_r2_2_fu_1273_p2 when (sel_tmp4_fu_1299_p2(0) = '1') else 
        s_tile_w_r2_5_fu_1291_p3;
    s_tile_w_r2_7_fu_1319_p3 <= 
        s_tile_w_r2_1_fu_1267_p2 when (sel_tmp8_fu_1313_p2(0) = '1') else 
        s_tile_w_r2_6_fu_1305_p3;
    s_tile_w_r2_8_fu_1333_p3 <= 
        s_tile_w_r2_fu_1261_p2 when (sel_tmp3_fu_1327_p2(0) = '1') else 
        s_tile_w_r2_7_fu_1319_p3;
    s_tile_w_r2_9_fu_1226_p3 <= 
        tmp_43_reg_1718_pp0_iter10_reg when (abscond1_fu_1216_p2(0) = '1') else 
        tmp_44_fu_1221_p2;
    s_tile_w_r2_fu_1261_p2 <= std_logic_vector(unsigned(ap_const_lv14_2) + unsigned(s_tile_w_r2_5_cast_fu_1233_p1));
    sel_tmp1_fu_878_p2 <= (tmp_36_fu_862_p2 and sel_tmp_fu_872_p2);
    sel_tmp2_fu_1285_p2 <= "1" when (m_fu_1256_p1 = ap_const_lv2_3) else "0";
    sel_tmp3_fu_1327_p2 <= "1" when (m_fu_1256_p1 = ap_const_lv2_0) else "0";
    sel_tmp4_fu_1299_p2 <= "1" when (m_fu_1256_p1 = ap_const_lv2_2) else "0";
    sel_tmp5_fu_973_p2 <= (tmp_61_fu_951_p3 xor ap_const_lv1_1);
    sel_tmp6_fu_979_p2 <= (tmp_38_fu_963_p2 and sel_tmp5_fu_973_p2);
    sel_tmp7_fu_1181_p2 <= (tmp4_fu_1175_p2 and tmp3_fu_1169_p2);
    sel_tmp8_fu_1313_p2 <= "1" when (m_fu_1256_p1 = ap_const_lv2_1) else "0";
    sel_tmp_fu_872_p2 <= (tmp_35_fu_850_p3 xor ap_const_lv1_1);
    tile_valid <= sel_tmp7_reg_1725_pp0_iter10_reg;

    tile_valid_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            tile_valid_ap_vld <= ap_const_logic_1;
        else 
            tile_valid_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp1_fu_379_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(tmp_cast_fu_376_p1));
        tmp21_cast_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp1_fu_379_p2),13));

        tmp22_cast_fu_403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp2_fu_397_p2),13));

    tmp2_fu_397_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(tmp_5_cast_fu_394_p1));
    tmp3_fu_1169_p2 <= (tmp_50_fu_1116_p2 and tmp_48_fu_1100_p2);
    tmp4_fu_1175_p2 <= (tmp_55_fu_1163_p2 and tmp_53_fu_1147_p2);
        tmp_10_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(M3_read_reg_1369_pp0_iter1_reg),32));

        tmp_11_fu_449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(M4_read_reg_1364_pp0_iter1_reg),32));

        tmp_12_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(M5_read_reg_1359_pp0_iter6_reg),32));

    tmp_13_fu_348_p1 <= s_w;
    tmp_14_fu_358_p1 <= s_h;
    tmp_15_fu_418_p2 <= std_logic_vector(unsigned(cd00_reg_1416) - unsigned(tmp_4_fu_412_p1));
        tmp_16_cast2_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_w_read_reg_1396_pp0_iter8_reg),14));

        tmp_16_cast3_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_w_read_reg_1396_pp0_iter8_reg),18));

        tmp_16_cast_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_w_read_reg_1396_pp0_iter8_reg),27));

    tmp_16_fu_423_p2 <= std_logic_vector(unsigned(rd00_reg_1424) - unsigned(tmp_s_fu_415_p1));
        tmp_17_cast_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_reg_1440_pp0_iter6_reg),18));

        tmp_17_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_reg_1468),32));

        tmp_19_cast1_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_h_read_reg_1389_pp0_iter8_reg),14));

        tmp_19_cast2_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_h_read_reg_1389_pp0_iter8_reg),18));

        tmp_19_cast_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(s_h_read_reg_1389_pp0_iter8_reg),27));

        tmp_19_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_16_reg_1473),32));

        tmp_20_cast_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_reg_1445_pp0_iter6_reg),18));

    tmp_21_fu_524_p2 <= std_logic_vector(unsigned(tmp_18_reg_1536) + unsigned(tmp_9_fu_512_p1));
    tmp_22_fu_529_p2 <= std_logic_vector(unsigned(tmp_21_fu_524_p2) + unsigned(tmp_20_reg_1541));
    tmp_24_cast_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(min2_1_cast_fu_846_p1),27));
    tmp_25_fu_534_p2 <= std_logic_vector(unsigned(tmp_23_reg_1547) + unsigned(tmp_12_fu_515_p1));
    tmp_26_1_fu_428_p2 <= std_logic_vector(unsigned(cd11_fu_389_p2) - unsigned(tmp_4_fu_412_p1));
    tmp_26_fu_539_p2 <= std_logic_vector(unsigned(tmp_25_fu_534_p2) + unsigned(tmp_24_reg_1552));
    tmp_27_2_fu_434_p2 <= std_logic_vector(unsigned(rd11_fu_407_p2) - unsigned(tmp_s_fu_415_p1));
    tmp_27_fu_544_p4 <= tmp_22_fu_529_p2(31 downto 15);
        tmp_28_1_fu_482_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_26_1_reg_1478),32));

    tmp_28_fu_558_p4 <= tmp_26_fu_539_p2(31 downto 15);
    tmp_29_fu_604_p4 <= tmp_33_1_fu_589_p2(31 downto 15);
        tmp_2_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(M1_read_reg_1379_pp0_iter1_reg),32));

        tmp_30_2_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_27_2_reg_1483),32));

    tmp_30_fu_618_p4 <= tmp_38_1_fu_599_p2(31 downto 15);
    tmp_31_fu_654_p4 <= tmp_33_2_fu_644_p2(31 downto 15);
    tmp_32_1_fu_584_p2 <= std_logic_vector(unsigned(tmp_29_1_reg_1558) + unsigned(tmp_9_fu_512_p1));
    tmp_32_fu_668_p4 <= tmp_38_2_fu_649_p2(31 downto 15);
    tmp_33_1_fu_589_p2 <= std_logic_vector(unsigned(tmp_32_1_fu_584_p2) + unsigned(tmp_20_reg_1541));
    tmp_33_2_fu_644_p2 <= std_logic_vector(unsigned(tmp_21_fu_524_p2) + unsigned(tmp_31_2_reg_1568));
    tmp_33_3_fu_694_p2 <= std_logic_vector(unsigned(tmp_32_1_fu_584_p2) + unsigned(tmp_31_2_reg_1568));
    tmp_33_fu_704_p4 <= tmp_33_3_fu_694_p2(31 downto 15);
    tmp_34_fu_718_p4 <= tmp_38_3_fu_699_p2(31 downto 15);
    tmp_35_fu_850_p3 <= min2_1_fu_841_p3(17 downto 17);
    tmp_36_fu_862_p2 <= "1" when (signed(tmp_24_cast_fu_858_p1) > signed(tmp_16_cast_fu_829_p1)) else "0";
    tmp_37_1_fu_594_p2 <= std_logic_vector(unsigned(tmp_35_1_reg_1563) + unsigned(tmp_12_fu_515_p1));
    tmp_37_fu_909_p2 <= "1" when (signed(max1_1_fu_903_p3) > signed(tmp_16_cast3_fu_826_p1)) else "0";
    tmp_38_1_fu_599_p2 <= std_logic_vector(unsigned(tmp_37_1_fu_594_p2) + unsigned(tmp_24_reg_1552));
    tmp_38_2_fu_649_p2 <= std_logic_vector(unsigned(tmp_25_fu_534_p2) + unsigned(tmp_36_2_reg_1574));
    tmp_38_3_fu_699_p2 <= std_logic_vector(unsigned(tmp_37_1_fu_594_p2) + unsigned(tmp_36_2_reg_1574));
    tmp_38_fu_963_p2 <= "1" when (signed(tmp_57_cast_fu_959_p1) > signed(tmp_19_cast_fu_838_p1)) else "0";
    tmp_39_fu_1010_p2 <= "1" when (signed(max1_3_fu_1004_p3) > signed(tmp_19_cast2_fu_835_p1)) else "0";
        tmp_40_cast_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_27_fu_544_p4),18));

    tmp_40_fu_1055_p2 <= std_logic_vector(signed(tmp_66_cast_fu_1047_p1) - signed(tmp_68_cast_fu_1051_p1));
    tmp_41_fu_1192_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(tmp_40_reg_1711_pp0_iter10_reg));
    tmp_42_fu_915_p3 <= max1_1_fu_903_p3(17 downto 17);
        tmp_43_cast_fu_568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_fu_558_p4),18));

    tmp_43_fu_1069_p2 <= std_logic_vector(signed(tmp_70_cast_fu_1061_p1) - signed(tmp_71_cast_fu_1065_p1));
    tmp_44_fu_1221_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(tmp_43_reg_1718_pp0_iter10_reg));
    tmp_45_fu_1237_p2 <= "1" when (signed(s_tile_h_fu_1197_p3) < signed(ap_const_lv13_1)) else "0";
        tmp_46_cast_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_fu_604_p4),18));

    tmp_46_fu_1075_p3 <= (w_div_read_reg_1410_pp0_iter8_reg & ap_const_lv3_0);
    tmp_47_fu_1090_p2 <= std_logic_vector(signed(tmp_78_cast1_fu_1082_p1) + signed(tmp_16_cast2_fu_823_p1));
    tmp_48_fu_1100_p2 <= "1" when (signed(min2_1_fu_841_p3) < signed(tmp_79_cast_fu_1096_p1)) else "0";
    tmp_49_fu_1106_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(tmp_78_cast_fu_1086_p1));
        tmp_4_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_7_reg_1430),13));

    tmp_50_fu_1116_p2 <= "1" when (signed(max1_1_fu_903_p3) > signed(tmp_81_cast_fu_1112_p1)) else "0";
    tmp_51_fu_1122_p3 <= (h_div_read_reg_1404_pp0_iter8_reg & ap_const_lv3_0);
    tmp_52_fu_1137_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(tmp_88_cast_fu_1133_p1));
        tmp_53_cast_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_30_fu_618_p4),18));

    tmp_53_fu_1147_p2 <= "1" when (signed(max1_3_fu_1004_p3) > signed(tmp_89_cast_fu_1143_p1)) else "0";
    tmp_54_fu_1153_p2 <= std_logic_vector(signed(tmp_88_cast1_fu_1129_p1) + signed(tmp_19_cast1_fu_832_p1));
    tmp_55_fu_1163_p2 <= "1" when (signed(min2_3_fu_942_p3) < signed(tmp_93_cast_fu_1159_p1)) else "0";
    tmp_57_cast_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(min2_3_cast_fu_947_p1),27));
        tmp_58_cast_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_31_fu_654_p4),18));

        tmp_5_cast_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(h_div_read_reg_1404),9));

    tmp_5_fu_314_p0 <= h_div;
    tmp_61_fu_951_p3 <= min2_3_fu_942_p3(17 downto 17);
    tmp_64_fu_1016_p3 <= max1_3_fu_1004_p3(17 downto 17);
        tmp_65_cast_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_32_fu_668_p4),18));

        tmp_66_cast_fu_1047_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rt_1_fu_992_p3),13));

    tmp_66_fu_1209_p1 <= s_tile_h_fu_1197_p3(12 - 1 downto 0);
        tmp_68_cast_fu_1051_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rb_1_fu_1036_p3),13));

        tmp_70_cast_fu_1061_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cl_1_fu_891_p3),13));

        tmp_71_cast_fu_1065_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(cr_1_fu_935_p3),13));

        tmp_76_cast_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_33_fu_704_p4),18));

        tmp_78_cast1_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_46_fu_1075_p3),14));

        tmp_78_cast_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_46_fu_1075_p3),12));

        tmp_79_cast_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_47_fu_1090_p2),18));

        tmp_81_cast_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_49_fu_1106_p2),18));

        tmp_86_cast_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_34_fu_718_p4),18));

        tmp_88_cast1_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_51_fu_1122_p3),14));

        tmp_88_cast_fu_1133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_51_fu_1122_p3),12));

        tmp_89_cast_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_52_fu_1137_p2),18));

        tmp_8_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(M0_read_reg_1384_pp0_iter1_reg),32));

        tmp_93_cast_fu_1159_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_54_fu_1153_p2),18));

    tmp_97_i1_fu_802_p2 <= "1" when (signed(min1_1_fu_786_p3) > signed(min2_2_fu_796_p3)) else "0";
    tmp_97_i_fu_764_p2 <= "1" when (signed(min1_fu_748_p3) > signed(min2_fu_758_p3)) else "0";
    tmp_98_i1_fu_1000_p2 <= "1" when (signed(max1_2_reg_1678) > signed(max2_1_reg_1684)) else "0";
    tmp_98_i_fu_899_p2 <= "1" when (signed(max1_reg_1651) > signed(max2_reg_1657)) else "0";
        tmp_9_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(M2_read_reg_1374_pp0_iter6_reg),32));

        tmp_cast_fu_376_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(w_div_read_reg_1410),9));

    tmp_fu_300_p0 <= w_div;
    tmp_i1_7_fu_792_p2 <= "1" when (signed(rs_2_reg_1615) > signed(rs_3_reg_1629)) else "0";
    tmp_i1_fu_782_p2 <= "1" when (signed(rs_0_reg_1587) > signed(rs_1_reg_1601)) else "0";
    tmp_i_6_fu_754_p2 <= "1" when (signed(cs_2_reg_1608) > signed(cs_3_reg_1622)) else "0";
    tmp_i_fu_744_p2 <= "1" when (signed(cs_0_reg_1580) > signed(cs_1_reg_1594)) else "0";
        tmp_s_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_reg_1435),13));

    top_row <= rt_1_reg_1701_pp0_iter10_reg;

    top_row_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            top_row_ap_vld <= ap_const_logic_1;
        else 
            top_row_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

        ws <= std_logic_vector(IEEE.numeric_std.resize(signed(s_tile_w_r2_8_fu_1333_p3),15));


    ws_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter11, ap_ce, ap_block_pp0_stage0_01001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter11 = ap_const_logic_1))) then 
            ws_ap_vld <= ap_const_logic_1;
        else 
            ws_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
